{"ast":null,"code":"var _jsxFileName = \"/home/kudos/Documents/react-projects/image-gallary/public/reactjs/src/views/components/galarry.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Body from './Body';\nimport Footer from './Footer';\nexport default class galarry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleValidateFileType = file => {\n      const fileName = file;\n      console.log(fileName);\n      const idxDot = fileName.lastIndexOf(\".\") + 1;\n      const extFile = fileName.substr(idxDot, fileName.length).toLowerCase();\n\n      if (extFile == \"jpg\" || extFile == \"jpeg\" || extFile == \"png\") {//TO DO\n      } else {\n        alert(\"Only jpg/jpeg and png files are allowed!\");\n      }\n    };\n\n    this.handleFileChange = event => {\n      let selectedFile = event.target.files;\n      this.handleValidateFileType(selectedFile[0].name);\n      /*Chaeck file type*/\n\n      console.log(\"--------------\", selectedFile); //Check File is not Empty\n\n      if (selectedFile.length > 0) {\n        // Select the very first file from list\n        let fileToLoad = selectedFile[0]; // FileReader function for read the file.\n\n        let fileReader = new FileReader(); // Onload of file read the file content\n\n        fileReader.onload = fileLoadedEvent => {\n          this.setState({\n            fileData: fileLoadedEvent.target.result,\n            fileName: selectedFile[0].name\n          });\n          console.log(fileLoadedEvent.target.result);\n        }; // Convert data to base64\n\n\n        fileReader.readAsDataURL(fileToLoad);\n      }\n    };\n\n    this.state = {\n      alert: null,\n      name: '',\n      nameState: '',\n      description: '',\n      gender: '',\n      descriptionState: '',\n      fileData: '',\n      fileName: '',\n      isAddView: true,\n      isListView: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"galarry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"galarry_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"galarry_body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Body, {\n      handleUploadFile: event => this.handleFileChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"galarry_fotter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/kudos/Documents/react-projects/image-gallary/public/reactjs/src/views/components/galarry.js"],"names":["React","Component","Header","Body","Footer","galarry","constructor","props","handleValidateFileType","file","fileName","console","log","idxDot","lastIndexOf","extFile","substr","length","toLowerCase","alert","handleFileChange","event","selectedFile","target","files","name","fileToLoad","fileReader","FileReader","onload","fileLoadedEvent","setState","fileData","result","readAsDataURL","state","nameState","description","gender","descriptionState","isAddView","isListView","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Header from './Header';\nimport Body from './Body';\nimport Footer from './Footer';\n\nexport default class galarry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            alert: null,\n            name: '',\n            nameState: '',\n            description: '',\n            gender: '',\n            descriptionState: '',\n            fileData: '',\n            fileName: '',\n            isAddView: true,\n            isListView: false\n        };\n    }\n\n    handleValidateFileType = (file) => {\n        const fileName = file\n        console.log(fileName)\n        const idxDot = fileName.lastIndexOf(\".\") + 1;\n        const extFile = fileName.substr(idxDot, fileName.length).toLowerCase();\n        if (extFile == \"jpg\" || extFile == \"jpeg\" || extFile == \"png\") {\n            //TO DO\n        } else {\n            alert(\"Only jpg/jpeg and png files are allowed!\");\n        }\n    }\n\n\n    handleFileChange = (event) => {\n        let selectedFile = event.target.files;\n        this.handleValidateFileType(selectedFile[0].name);\n\n        /*Chaeck file type*/\n        console.log(\"--------------\", selectedFile)\n        //Check File is not Empty\n        if (selectedFile.length > 0) {\n            // Select the very first file from list\n            let fileToLoad = selectedFile[0];\n            // FileReader function for read the file.\n            let fileReader = new FileReader();\n            // Onload of file read the file content\n            fileReader.onload = (fileLoadedEvent) => {\n                this.setState({\n                    fileData: fileLoadedEvent.target.result,\n                    fileName: selectedFile[0].name\n                });\n                console.log(fileLoadedEvent.target.result)\n            };\n            // Convert data to base64\n            fileReader.readAsDataURL(fileToLoad);\n        }\n    };\n\n\n\n    render() {\n        return (\n            <div className='galarry'>\n                <div className='galarry_header'>\n                    <Header />\n                </div>\n                <div className='galarry_body'>\n                    <Body handleUploadFile={(event) => this.handleFileChange(event)} />\n                </div>\n                <div className='galarry_fotter'>\n                    <Footer />\n                </div>\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}