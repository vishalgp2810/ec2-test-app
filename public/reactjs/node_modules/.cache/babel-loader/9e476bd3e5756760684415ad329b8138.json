{"ast":null,"code":"var _jsxFileName = \"/home/kudos/Documents/react-projects/image-gallary/public/reactjs/src/views/components/galarry.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Body from './Body';\nimport Footer from './Footer';\nimport ReactBSAlert from \"react-bootstrap-sweetalert\";\nexport default class galarry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleResponsePopUp = (message, title, success, error) => {\n      this.setState({\n        alert: /*#__PURE__*/React.createElement(ReactBSAlert, {\n          success: success,\n          error: error,\n          style: {\n            display: \"block\",\n            marginTop: \"250px\"\n          },\n          title: title,\n          onConfirm: () => this.handleModalClose(),\n          confirmBtnBsStyle: \"success\",\n          btnSize: \"md\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }\n        }, message)\n      });\n    };\n\n    this.handleModalClose = () => {\n      this.setState({\n        alert: null\n      });\n    };\n\n    this.handleFileChange = event => {\n      let selectedFile = event.target.files;\n      /*Chaeck file type*/\n\n      const fileName = selectedFile[0].name;\n      console.log(fileName);\n      const idxDot = fileName.lastIndexOf(\".\") + 1;\n      const extFile = fileName.substr(idxDot, fileName.length).toLowerCase();\n      if (!extFile == \"jpg\" || !extFile == \"jpeg\" || !extFile == \"png\") return this.handleResponsePopUp('Only image is suported', 'Error', false, true); //Check File is not Empty\n\n      if (selectedFile.length > 0) {\n        // Select the very first file from list\n        let fileToLoad = selectedFile[0]; // FileReader function for read the file.\n\n        let fileReader = new FileReader(); // Onload of file read the file content\n\n        fileReader.onload = fileLoadedEvent => {\n          this.setState({\n            fileData: fileLoadedEvent.target.result,\n            fileName: selectedFile[0].name\n          });\n          console.log(fileLoadedEvent.target.result);\n        }; // Convert data to base64\n\n\n        fileReader.readAsDataURL(fileToLoad);\n      }\n    };\n\n    this.state = {\n      alert: null,\n      name: '',\n      nameState: '',\n      description: '',\n      gender: '',\n      descriptionState: '',\n      fileData: '',\n      fileName: '',\n      isAddView: true,\n      isListView: false\n    };\n  } // Pop-Ups for response in Modals\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.alert, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"galarry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"galarry_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"galarry_body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Body, {\n      handleUploadFile: event => this.handleFileChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"galarry_fotter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/kudos/Documents/react-projects/image-gallary/public/reactjs/src/views/components/galarry.js"],"names":["React","Component","Header","Body","Footer","ReactBSAlert","galarry","constructor","props","handleResponsePopUp","message","title","success","error","setState","alert","display","marginTop","handleModalClose","handleFileChange","event","selectedFile","target","files","fileName","name","console","log","idxDot","lastIndexOf","extFile","substr","length","toLowerCase","fileToLoad","fileReader","FileReader","onload","fileLoadedEvent","fileData","result","readAsDataURL","state","nameState","description","gender","descriptionState","isAddView","isListView","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Header from './Header';\nimport Body from './Body';\nimport Footer from './Footer';\nimport ReactBSAlert from \"react-bootstrap-sweetalert\";\n\nexport default class galarry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            alert: null,\n            name: '',\n            nameState: '',\n            description: '',\n            gender: '',\n            descriptionState: '',\n            fileData: '',\n            fileName: '',\n            isAddView: true,\n            isListView: false\n        };\n    }\n\n\n    // Pop-Ups for response in Modals\n    handleResponsePopUp = (message, title, success, error) => {\n        this.setState({\n            alert: (\n                <ReactBSAlert\n                    success={success}\n                    error={error}\n                    style={{ display: \"block\", marginTop: \"250px\" }}\n                    title={title}\n                    onConfirm={() => this.handleModalClose()}\n                    confirmBtnBsStyle=\"success\"\n                    btnSize=\"md\"\n                >\n                    {message}\n                </ReactBSAlert>\n            )\n        });\n    };\n\n    handleModalClose = () => {\n        this.setState({\n            alert: null\n        });\n    };\n\n    handleFileChange = (event) => {\n        let selectedFile = event.target.files;\n        /*Chaeck file type*/\n        const fileName = selectedFile[0].name;\n        console.log(fileName)\n        const idxDot = fileName.lastIndexOf(\".\") + 1;\n        const extFile = fileName.substr(idxDot, fileName.length).toLowerCase();\n        if (!extFile == \"jpg\" || !extFile == \"jpeg\" || !extFile == \"png\") return this.handleResponsePopUp('Only image is suported', 'Error', false, true);\n        //Check File is not Empty\n        if (selectedFile.length > 0) {\n            // Select the very first file from list\n            let fileToLoad = selectedFile[0];\n            // FileReader function for read the file.\n            let fileReader = new FileReader();\n            // Onload of file read the file content\n            fileReader.onload = (fileLoadedEvent) => {\n                this.setState({\n                    fileData: fileLoadedEvent.target.result,\n                    fileName: selectedFile[0].name\n                });\n                console.log(fileLoadedEvent.target.result)\n            };\n            // Convert data to base64\n            fileReader.readAsDataURL(fileToLoad);\n        }\n    };\n\n\n\n    render() {\n        return (\n            <>\n                {this.state.alert}\n                <div className='galarry'>\n                    <div className='galarry_header'>\n                        <Header />\n                    </div>\n                    <div className='galarry_body'>\n                        <Body handleUploadFile={(event) => this.handleFileChange(event)} />\n                    </div>\n                    <div className='galarry_fotter'>\n                        <Footer />\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}